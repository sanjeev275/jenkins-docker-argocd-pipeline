pipeline {
    agent any
    tools {
        maven 'maven'
        jdk 'java'
    }
    environment {
        SONARQUBE = 'sonarserver'  // Must match the name you configured
        DOCKER_IMAGE = "sanjeev275/my-webapp"
        MANIFEST_REPO = "https://github.com/sanjeev275/my-webapp-depoly.git"
    }
    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/sanjeev275/jenkins-maven.git'
            }
        }
        stage('Build war') {
            steps {
                sh 'mvn clean package'
            }
        }
        stage('SonarQube Analysis') {
            steps {
                script {
                    withSonarQubeEnv('sonarserver') {
                        withCredentials([string(credentialsId: 'sonarkey', variable: 'SONAR_TOKEN')]) {
                            sh "mvn sonar:sonar -Dsonar.token=$SONAR_TOKEN -Dsonar.projectKey=my-webapp"
                        }
                    }
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    sh """
                        docker build -t $DOCKER_IMAGE:${BUILD_NUMBER} .
                    """
                }
            }
        }
        stage('Push Docker Image') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'dockerhub', 
                                                     usernameVariable: 'DOCKER_USER', 
                                                     passwordVariable: 'DOCKER_PASS')]) {
                        sh """
                            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
                            docker push $DOCKER_IMAGE:${BUILD_NUMBER}
                        """
                    }
                }
            }
        }
        stage('Update K8s Manifest Repo') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'github', 
                                  usernameVariable: 'GIT_USER', 
                                  passwordVariable: 'GIT_PASS')]) {
                        sh """
                            rm -rf manifest-repo
                            git clone https://${GIT_USER}:${GIT_PASS}@github.com/sanjeev275/my-webapp-depoly.git manifest-repo
                            cd manifest-repo
                            sed -i 's|image: .*|image: ${DOCKER_IMAGE}:${BUILD_NUMBER}|' deployment.yaml
                            git config user.email "jenkins@ci.com"
                            git config user.name "Jenkins"
                            git commit -am "Update image tag to build $BUILD_NUMBER"
                            git push origin main
                        """
                    }
                }
            }
        }
    }
}
